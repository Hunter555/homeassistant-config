  - platform: time_date
    display_options:
      - 'time'
#  - platform: sonarr
#    api_key: !secret sonarr_key
#    host: 10.0.0.2
#    monitored_conditions:
#     - upcoming
#    days: 7
#  - platform: plex
#    host: 10.0.0.2
#    username: !secret plex_username
#    password: !secret plex_password
  #- platform: mqtt
  #  state_topic: "$device/80d5a43df8/channel/1-1794/event/state"
  #  name: Silvia Power
  #  unit_of_measurement: 'watts'
  #  value_template: '{{ value_json.params[0] }}'
  #  expire_after: 60
  #- platform: mqtt
  #  state_topic: "$device/80d5a43df8/channel/1-1794/#"
  #  name: Silvia Power2
  #  unit_of_measurement: 'watts'
  #  value_template: '{{ value_json.params[0] }}'
  #  expire_after: 60
  - platform: bom
    station: IDN60901.94759
    monitored_conditions:
     - apparent_t
     - air_temp
  - platform: darksky
    name: Weather
    api_key: !secret darksky_key
    units: si
    monitored_conditions:
      - summary
      - precip_probability
  - platform: cert_expiry
    host: !secret url
    port: 443
  - platform: transport_nsw
    stop_id: '208239'
    name: 'Local Bus'
    route: '599'
    api_key: !secret transport_nsw_key
  - platform: transport_nsw
    stop_id: '208171'
    name: 'Platform 1'
    api_key: !secret transport_nsw_key
  - platform: transport_nsw
    stop_id: '208172'
    name: 'Platform 2'
    api_key: !secret transport_nsw_key
  - platform: nsw_fuel_station
    station_id: 196
    fuel_types: ["P98"]
  - platform: nsw_fuel_station
    station_id: 2198
    fuel_types: ["P98"]
  - platform: nsw_fuel_station
    station_id: 1465
    fuel_types: ["P98"]
  - platform: statistics
    name: 'Power per minute'
    entity_id: sensor.power_meter
    sampling_size: 60

  - platform: mold_indicator
    indoor_temp_sensor: sensor.temperature_158d0001e7b92f
    indoor_humidity_sensor: sensor.humidity_158d0001e7b92f
    outdoor_temp_sensor: sensor.temperature_158d0001e87d1f
    calibration_factor: 2.375

  - platform: template
    sensors:
      garage_door_status:
        friendly_name: 'State of the door'
        value_template: '{{ states.cover.garage_door.state }}'
      garage_door_time_in_state:
        friendly_name: 'Since'
        value_template: '{{ states.cover.garage_door.attributes.time_in_state }}'
      garage_door_wifi_signal_strength:
        friendly_name: 'WiFi strength'
        value_template: '{{ states.cover.garage_door.attributes.wifi_signal_strength }}'
        unit_of_measurement: 'dB'

  - platform: template
    sensors:
      display_timer_local:
        friendly_name: Kitchen Display Timer
        entity_id: sensor.time
        value_template: "{{ (states('sensor.kitchen_display_timer')|as_timestamp()|timestamp_local)}}"
      display_timer_remaining:
        friendly_name: Kitchen Display Time Remaining
        entity_id: sensor.time
        value_template: >
          {% set timerRemaining = (states('sensor.kitchen_display_timer')|as_timestamp()|timestamp_local|as_timestamp()) %}
          {% if timerRemaining != None %}
            {{ ((timerRemaining - now()|as_timestamp())/60)|round(1) }}
          {% else %}
            None
          {% endif %}

  - platform: template
    sensors:
      hourly_total_power:
        friendly_name: Hourly Total
        value_template: "{{ state_attr('sensor.power_per_minute_mean', 'total')}}"
        unit_of_measurement: kW 
      realtime_power:
        friendly_name: Realtime Power
        value_template: "{{(state_attr('sensor.power_per_minute_mean', 'total') / 60)|round(2)}}"
        unit_of_measurement: kwH 
      daily_peak_cost:
        friendly_name: Peak
        value_template: "{{(states('sensor.energy_peak')|float*(states('input_number.peak_tariff_rate')|float / 100))|round(2)}}"
        unit_of_measurement: $
      daily_offpeak_cost:
        friendly_name: Off Peak
        value_template: "{{(states('sensor.energy_offpeak')|float*(states('input_number.offpeak_tariff_rate')|float / 100))|round(2)}}"
        unit_of_measurement: $
      daily_shoulder_cost:
        friendly_name: Shoulder
        value_template: "{{(states('sensor.energy_shoulder')|float*(states('input_number.shoulder_tariff_rate')|float / 100))|round(2)}}"
        unit_of_measurement: $
      daily_supply_cost:
        friendly_name: Supply
        value_template: "0.97"
        unit_of_measurement: $
      daily_total_cost:
        friendly_name: Daily Total
        value_template: "{{states('sensor.daily_peak_cost')|float + states('sensor.daily_offpeak_cost')|float + states('sensor.daily_shoulder_cost')|float + states('sensor.daily_supply_cost')|float}}"
        unit_of_measurement: $
      is_winter_tariff:
        friendly_name: Winter Tariffs
        value_template: "{{now().month >= 6 and now().month <= 8}}"
        entity_id: sensor.date

  - platform: template
    sensors:
      shower_on:
        friendly_name: 'Shower on'
        value_template: '{{ ((states.sensor.humidity_158d000210aa65.state | float - states.sensor.humidity_158d0001e7b92f.state | float) > 27) or states.sensor.humidity_158d000210aa65.state | float > 95 }}'

